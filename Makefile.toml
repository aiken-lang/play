[config]
skip_core_tasks = true

[tasks.default]
alias = "build"

[tasks.dev]
category = "Dev"
dependencies = ["setup-stdlib"]
run_task = { name = ["dev-css", "dev-trunk"], fork = true, parallel = true }

[tasks.dev-trunk]
category = "Dev"
install_crate = "trunk"
command = "trunk"
args = ["serve", "--open"]

[tasks.dev-css]
category = "Dev"
command = "npx"
args = ["tailwindcss", "-i", "./styles.css", "-o", "./output.css", "--watch"]

[tasks.build]
clear = true
category = "Build"
install_crate = "trunk"
command = "trunk"
args = ["build", "--release"]
dependencies = ["setup-stdlib", "build-css"]

[tasks.build-css]
category = "Build"
command = "npx"
args = ["tailwindcss", "-i", "styles.css", "-o", "output.css", "--minify"]

[tasks.setup-stdlib]
category = "Setup"
script_runner = "@shell"
script = '''
[ -d "stdlib" ] && echo "stdlib already setup." && exit 0
rm -rf stdlib && mkdir -p stdlib
curl -L \
  -H "Accept: application/vnd.github+json" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/aiken-lang/stdlib/tarball/v2.2.0 \
  -o stdlib.tar
tar -xvf stdlib.tar --strip-components 1 -C stdlib
rm stdlib.tar
'''

[tasks.setup-fuzz]
category = "Setup"
script_runner = "@shell"
script = '''
[ -d "fuzz" ] && echo "fuzz already setup." && exit 0
rm -rf fuzz && mkdir -p fuzz
curl -L \
  -H "Accept: application/vnd.github+json" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/aiken-lang/fuzz/tarball/v2.1.1 \
  -o fuzz.tar
tar -xvf fuzz.tar --strip-components 1 -C fuzz
rm fuzz.tar
'''
